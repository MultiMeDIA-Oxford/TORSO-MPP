function OPZ_CurrentPosition( h )

  persistent DEEP
  if isempty(DEEP), DEEP = 0.5; end

  aa = ancestortool( hittest , 'axes' );
  if ~aa, return; end

  oldUnits = get( h , 'Units' );
  set( h , 'Units' , 'pixels' );
  Hpx = get( h , 'Position' );
  Wpx = Hpx(3);
  Hpx = Hpx(4);
  set( h , 'Units' , oldUnits );

  STORED_STATE= setACTIONS( h , 'suspend' );
  set( h , 'Pointer' , 'custom' );
  set( h , 'PointerShapeCData',NaN(16,16));



  A3D = axes( 'Parent',h,...
    'hittest','off' ,...
    'color','none'  ,...
    'Xcolor',[.65 0 0],'YColor',[0 .65 0],'ZColor',[0 0 .65],...
    'linewidth',2,...
    'FontUnits', 'pixel' ,...
    'FontName', 'Helvetica',...
    'FontSize', 20 ,...
    'FontWeight', 'bold' ,...
    'GridLineStyle',':',...
    'XGrid', 'on','YGrid', 'on','ZGrid', 'on',...
    'Visible','off' );
  M3D = line( 'Parent',A3D     ,...
    'XData', NaN                ,...
    'YData', NaN                ,...
    'LineStyle','-'             ,...
    'LineWidth',10               ,...
    'Visible','off',    'marker','none'                ,...
    'markerfacecolor',[1 0 0],...
    'hittest','off' ,...
    'erasemode','normal',...
    'linewidth',4,...
    'xliminclude','off','yliminclude','off','zliminclude','off',...
    'Color',[1 .3  1]*1             );
  L3D = line( 'Parent',A3D     ,...
    'XData', NaN                ,...
    'YData', NaN                ,...
    'LineStyle','-'             ,...
    'LineWidth',1               ,...
    'Visible','off',    'marker','.'                ,...
    'markersize',10,...
    'hittest','off' ,...
    'xliminclude','off','yliminclude','off','zliminclude','off',...
    'Color',[1 .3 1]*1             );
  AAX = axes( 'Parent',h,...
    'Units','pixels',...
    'Position',[0 0 Wpx Hpx],...
    'hittest','off' ,...
    'Visible','off' );
  L2D = line( 'Parent',AAX     ,...
    'XData', NaN                ,...
    'YData', NaN                ,...
    'LineStyle','-'             ,...
    'LineWidth',1               ,...
    'Visible','off',    'marker','.'                ,...
    'markersize',10,...
    'hittest','off' ,...
    'xliminclude','off','yliminclude','off','zliminclude','off',...
    'Color',[1 0 1]             );
  ATV = text( 'Parent',AAX,...
    'BackgroundColor',[.7 .7 .8]  ,...
    'Color',[.5 0 1]               ,...
    'fontweight','bold',...
    'FontSize',12                  ,...
    'HorizontalAlignment','left' ,...
    'VerticalAlignment','middle'  ,...
    'hittest','off' ,...
    'Visible','off',    'string','V' ,...
    'margin',3,...
    'Position',[0.5 0.5]    );
  ATH = text( 'Parent',AAX,...
    'BackgroundColor',[.7 .7 .8]  ,...
    'fontweight','bold',...
    'Color',[.5 0 1]               ,...
    'FontSize',12                 ,...
    'margin',3,...
    'HorizontalAlignment','center',...
    'VerticalAlignment','bottom'     ,...
    'hittest','off' ,...
    'Visible','off',    'string','H' ,...
    'Position',[0.1 0.5]    );
  set(AAX,'XLim',[0 Wpx],'YLim',[0 Hpx],'ZLim',[0 1],...
    'XLimMode','manual','YLimMode','manual','ZLimMode','manual');

  set(h,'KeyPressFcn',';');
  set(h,'WindowButtonMotionFcn' ,@(h,e) SHOW_CURRENT_POS() );
  set(h,'KeyReleaseFcn'         ,@(h,e) STOP_CURRENT_POS() );
%   set(h,'WindowButtonDownFcn'   ,@(h,e) STOP_CURRENT_POS() );
  set(h,'WindowButtonDownFcn'   ,@(h,e) CHANGE_DEEP() );
  
  SHOW_CURRENT_POS();

  function SHOW_CURRENT_POS
    pk = pressedkeys(false);
    if numel(pk)~=2 || ~strcmp( pk{1} , 'SPACE' ) || ~strcmp( pk{2} , 'C' )
      STOP_CURRENT_POS();
      return;
    end
    
    ax = ancestortool( hittest , 'axes' );
    if ~ax
      set( [L2D,ATH,ATV],'Visible','off' );
      set( [L3D,A3D,M3D],'Visible','off' );
      return;
    end
    
    XYZ = sum( bsxfun(@times, get( ax  , 'CurrentPoint' ) , [DEEP;1-DEEP] ) , 1 );
    
    if is3daxes( ax )
      set( [L2D,ATH,ATV],'Visible','off' );
      set( [L3D,A3D,M3D],'Visible','on'  );
      
      set( A3D , 'XTick' , XYZ(1) , 'YTick' , XYZ(2) , 'ZTick' , XYZ(3) );
     
      copyProperty( ax , 'Box' );
      copyProperty( ax , 'Units' );
      copyProperty( ax , 'Position' );
      copyProperty( ax , 'Projection' );
      copyProperty( ax , 'CameraPosition' );
      copyProperty( ax , 'CameraTarget' );
      copyProperty( ax , 'CameraUpVector' );
      copyProperty( ax , 'CameraViewAngle' );
      copyProperty( ax , 'Clipping' );
      copyProperty( ax , 'DataAspectRatio' );
      copyProperty( ax , 'LooseInset' );
      %       copyProperty( ax , 'OuterPosition' );
      copyProperty( ax , 'PlotBoxAspectRatio' );
      copyProperty( ax , 'WarpToFill' );
      copyProperty( ax , 'XAxisLocation' );
      copyProperty( ax , 'XDir' );
      copyProperty( ax , 'XLim' );
      copyProperty( ax , 'XScale' );
      copyProperty( ax , 'YAxisLocation' );
      copyProperty( ax , 'YDir' );
      copyProperty( ax , 'YLim' );
      copyProperty( ax , 'YScale' );
      copyProperty( ax , 'ZAxisLocation' );
      copyProperty( ax , 'ZDir' );
      copyProperty( ax , 'ZLim' );
      copyProperty( ax , 'ZScale' );
      

      xl = get(A3D,'XLim');
      yl = get(A3D,'YLim');
      zl = get(A3D,'ZLim');
      
      set( L3D , 'XData' , [ xl NaN [0,0]+XYZ(1) NaN [0,0]+XYZ(1) ] ,...
        'YData' , [ [0,0]+XYZ(2) NaN yl NaN [0,0]+XYZ(2) ] ,...
        'ZData' , [ [0,0]+XYZ(3) NaN [0,0]+XYZ(3) NaN zl ] );
      
      set( M3D , 'Parent' , ax                                      ,...
        'XData' , [ xl NaN [0,0]+XYZ(1) NaN [0,0]+XYZ(1) ] ,...
        'YData' , [ [0,0]+XYZ(2) NaN yl NaN [0,0]+XYZ(2) ] ,...
        'ZData' , [ [0,0]+XYZ(3) NaN [0,0]+XYZ(3) NaN zl ] );
      
    else
      set( [L2D,ATH,ATV],'Visible','on'  );
      set( [L3D,A3D,M3D],'Visible','off' );
      
      [vi,HH,VV] = viewfrom( ax );
      switch HH
        case 'X', HL = [ get( ax , 'XLim' ) ; 0 0 ; 0 0 ];
        case 'Y', HL = [ 0 0 ; get( ax , 'YLim' ) ; 0 0 ];
        case 'Z', HL = [ 0 0 ; 0 0 ; get( ax , 'ZLim' ) ];
      end
      XL = [ mean( figurexy2axesxyz( axesxyz2figurexy( ax , HL(:,1).' ) , AAX ) , 1 ) ;...
        mean( figurexy2axesxyz( axesxyz2figurexy( ax , HL(:,2).' ) , AAX ) , 1 ) ];
      XL = sort( [ -100 , Wpx+100 , XL(1,1) , XL(2,1) ] );
      
      switch VV
        case 'X', VL = [ get( ax , 'XLim' ) ; 0 0 ; 0 0 ];
        case 'Y', VL = [ 0 0 ; get( ax , 'YLim' ) ; 0 0 ];
        case 'Z', VL = [ 0 0 ; 0 0 ; get( ax , 'ZLim' ) ];
      end
      YL = [ mean( figurexy2axesxyz( axesxyz2figurexy( ax , VL(:,1).' ) , AAX ) , 1 ) ;...
        mean( figurexy2axesxyz( axesxyz2figurexy( ax , VL(:,2).' ) , AAX ) , 1 ) ];
      YL = sort( [ -100 , Hpx+100 , YL(1,2) , YL(2,2) ] );
      
      HV  = mean( get( AAX , 'CurrentPoint' ) , 1 );
      set( L2D , 'XData' , [ XL , NaN , [0 0 0 0]+HV(1) ] ,...
        'YData' , [ [0 0 0 0]+HV(2) , NaN , YL ] ,...
        'ZData' , [] );
      set( ATV , 'position' , [ XL(2)+5 , HV(2) , 0 ] );
      set( ATH , 'position' , [ HV(1) , YL(2)+5 , 0 ] );
      
      
      switch HH
        case 'X', set( ATH , 'string', sprintf('X: % 5.03g',XYZ(1)) );
        case 'Y', set( ATH , 'string', sprintf('Y: % 5.03g',XYZ(2)) );
        case 'Z', set( ATH , 'string', sprintf('Z: % 5.03g',XYZ(3)) );
      end
      switch VV
        case 'X', set( ATV , 'string', sprintf('X: % 5.03g',XYZ(1)) );
        case 'Y', set( ATV , 'string', sprintf('Y: % 5.03g',XYZ(2)) );
        case 'Z', set( ATV , 'string', sprintf('Z: % 5.03g',XYZ(3)) );
      end
      
    end
    
  end

  function CHANGE_DEEP
    while 1
      pk = pressedkeys(5);
      if     isequal( pk , 1 )
        DEEP = max( 0 , DEEP - 1/400);
      elseif isequal( pk , 3 )
        DEEP = min( 1 , DEEP + 1/400);
      elseif isequal( pk , 2 )
        DEEP = 0.5;
      else
        return;
      end
      SHOW_CURRENT_POS();
      pause(0.0005);
    end
  end


  function STOP_CURRENT_POS
    setACTIONS( h , 'restore' , STORED_STATE );
    try, delete(M3D);  end
    try, delete(AAX);  end
    try, delete(A3D);  end
  end

  function copyProperty( ax , p )
    try, set( A3D , p , get( ax , p ) ); end
  end

end

